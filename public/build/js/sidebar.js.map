{"version":3,"sources":["sidebar.js"],"names":["mainApp","userPreferences","menuToggle","actionsTheme","getCountProjects","getCountTask","getCountTaskPending","getCountTaskCompleted","userThemePreference","localStorage","getItem","currentTheme","getCurrentTheme","changeTheme","setItem","document","body","classList","contains","btnMenuToggle","getElementById","sidebar","addEventListener","toggle","theme","icon","querySelector","innerHTML","add","remove","window","onscroll","async","url","response","fetch","projectsTotal","json","projects","textContent","length","clearHTML","noProjectMessage","createElement","className","linkButton","href","appendChild","projectsToShow","slice","circleColors","forEach","project","index","divContainer","span","nameProject","name","error","console","log","tasks","countTaskPending","filter","task","state","countTaskCompleted","percentageCompleted","style","width","containerTask","firstChild","removeChild"],"mappings":"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","file":"sidebar.js","sourcesContent":["document.addEventListener('DOMContentLoaded', mainApp);\r\n\r\n// Main function \r\nfunction mainApp() {\r\n    userPreferences();\r\n    menuToggle();\r\n    actionsTheme();\r\n    getCountProjects();\r\n    getCountTask();\r\n    getCountTaskPending();\r\n    getCountTaskCompleted();\r\n}\r\n\r\nfunction userPreferences() {\r\n    const userThemePreference = localStorage.getItem('theme');\r\n    const currentTheme = getCurrentTheme(); // Obtener el tema actual antes de realizar cambios\r\n\r\n    if (!userThemePreference) {\r\n        // Si no hay preferencia almacenada, establecer el tema actual\r\n        localStorage.setItem('theme', currentTheme);\r\n    } else {\r\n        // Si hay preferencia almacenada, aplicarla\r\n        changeTheme(userThemePreference);\r\n    }\r\n}\r\n\r\nfunction getCurrentTheme() {\r\n    const body = document.body;\r\n    return body.classList.contains('dark-theme') ? 'dark' : 'light';\r\n}\r\n// Functinons //\r\nfunction menuToggle() {\r\n    // Select button menu toggle\r\n    const btnMenuToggle = document.getElementById('menu-toggle');\r\n    // select sidebar for after show\r\n    const sidebar = document.getElementById('sidebar');\r\n    btnMenuToggle.addEventListener('click', () => {\r\n        sidebar.classList.toggle('sidebar--show');\r\n    });\r\n}\r\n\r\nwindow.onscroll = () => {\r\n    sidebar.classList.remove('sidebar--show');\r\n}\r\nfunction actionsTheme() {\r\n    document.getElementById('light').addEventListener('click', function() {\r\n        changeTheme('light');\r\n    });\r\n    \r\n    document.getElementById('dark').addEventListener('click', function() {\r\n        changeTheme('dark');\r\n    });\r\n}\r\n\r\nfunction changeTheme(theme) {\r\n    const btnChangeTheme = document.getElementById('btn-change-theme');\r\n    const icon = btnChangeTheme.querySelector('svg');\r\n    const body = document.body;\r\n    if (theme === 'dark') {\r\n        icon.innerHTML = `\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z\" />\r\n        `;\r\n        body.classList.add('dark-theme');\r\n        body.classList.remove('light-theme');\r\n    } else {\r\n        icon.innerHTML = `\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\" />\r\n        `;\r\n        body.classList.add('light-theme');\r\n        body.classList.remove('dark-theme');\r\n    }\r\n\r\n    // Actualizar la preferencia almacenada\r\n    localStorage.setItem('theme', theme);\r\n}\r\n\r\n// function that get count projects\r\nexport async function getCountProjects() {\r\n    try {\r\n        // create url and consume API\r\n        const url = 'http://localhost:3000/api/projects';\r\n        // Apply fetch to url\r\n        const response = await fetch(url);\r\n        // will see the result with format json\r\n        const result = await response.json();\r\n        const projectsTotal = result.projects;\r\n        // add task count on sidebar number\r\n        document.getElementById('count-projects').textContent = projectsTotal.length;\r\n        // clear chidls\r\n        clearHTML();\r\n        // Check if there are projects\r\n        if(projectsTotal.length === 0) {\r\n            // If there are no projects, display a message and a link to add one\r\n            const noProjectMessage = document.createElement('P');\r\n            noProjectMessage.className = 'fs-4 fw-semibold text-center';\r\n            noProjectMessage.textContent = 'There are no projects yet, add one!';\r\n            // link \r\n            const linkButton = document.createElement('A');\r\n            linkButton.className = 'link btn btn-primary w-100 fs-4 text-center p-2 fw-semibold';\r\n            linkButton.textContent = 'Start add';\r\n            linkButton.href = '/dashboard/projects';\r\n\r\n            // Append message to display container\r\n            document.getElementById('projects-container').appendChild(noProjectMessage);\r\n            document.getElementById('projects-container').appendChild(linkButton);\r\n            return;\r\n        }\r\n        // Show only the first four projects\r\n        const projectsToShow = projectsTotal.slice(0, 4);\r\n        // Array with available color classes\r\n        const circleColors = ['projects-user__circle--primary', 'projects-user__circle--yellow', 'projects-user__circle--green', 'projects-user__circle--orange'];\r\n\r\n        // Loop through the projects to display them\r\n        projectsToShow.forEach( (project, index) => {\r\n            // Create elements to display project info\r\n            const divContainer = document.createElement('DIV');\r\n            divContainer.className = 'd-flex align-items-center gap-3 mb-3';\r\n\r\n            // create span \r\n            const span = document.createElement('SPAN');\r\n            span.className = `projects-user__circle mb-0 ${circleColors[index % circleColors.length]}`;\r\n\r\n            // create paragraphy\r\n            const nameProject = document.createElement('P')\r\n            nameProject.className = 'mb-0 fs-4 name-project';\r\n            nameProject.textContent = project.name;\r\n\r\n            // Append elemets to display container\r\n            divContainer.appendChild(span);\r\n            divContainer.appendChild(nameProject);\r\n            document.getElementById('projects-container').appendChild(divContainer);\r\n        });\r\n        return projectsTotal.length;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return;\r\n    }\r\n}\r\n\r\n// function to get the count of tasks and projects ---- this function will be exported\r\nexport async function getCountTask() {\r\n    try {\r\n        // connect to url\r\n        const url = 'http://localhost:3000/api/tasks';\r\n        // get response\r\n        const response = await fetch(url);\r\n        // get result\r\n        const result = await response.json();\r\n        // get all tasks\r\n        const tasks = result.tasks.length;\r\n        // show count in html sidebar\r\n        document.getElementById('all-task').textContent = tasks;\r\n        return tasks;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return;\r\n    }\r\n}\r\n\r\n// function to get the count of tasks with state pending\r\nexport async function getCountTaskPending() {\r\n    try {\r\n        // connect to url\r\n        const url = 'http://localhost:3000/api/tasks';\r\n        // get response\r\n        const response = await fetch(url);\r\n        // get result\r\n        const result = await response.json();\r\n        // get the task array\r\n        const tasks = result.tasks;\r\n        // filters task by her state \r\n        const tasksPending = tasks.filter(task => task.state === 'pending');\r\n        // get task count with status pending\r\n        const countTaskPending = tasksPending.length;\r\n        document.getElementById('pending-tasks').textContent = countTaskPending;\r\n        return countTaskPending;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return;\r\n    }\r\n}\r\n\r\n// function to get the count of tasks with state comeplete\r\nexport async function getCountTaskCompleted() {\r\n    try {\r\n        // connect to url\r\n        const url = 'http://localhost:3000/api/tasks';\r\n        // get response\r\n        const response = await fetch(url);\r\n        // get result\r\n        const result = await response.json();\r\n        // get the task array\r\n        const tasks = result.tasks;\r\n        // filters task by her state \r\n        const taskCompleted = tasks.filter(task => task.state === 'completed');\r\n        // get task count with status pending\r\n        const countTaskCompleted = taskCompleted.length;\r\n        document.getElementById('completed-task').textContent = `Task Completed - ${countTaskCompleted} / ${tasks.length}`;\r\n        // Calculate percentage of completed tasks\r\n        const percentageCompleted = (countTaskCompleted / tasks.length) * 100;\r\n        // declarated variable and select progress bar\r\n        const progressBar = document.getElementById('progress-bar');\r\n        // dynamically applying styles\r\n        progressBar.style.width = percentageCompleted + '%';\r\n        // Return the percentage\r\n        return countTaskCompleted;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        return;\r\n    }\r\n}\r\n\r\n// HTML CLEAN\r\nfunction clearHTML() {\r\n    // select container\r\n    const containerTask = document.getElementById('projects-container');\r\n    // clean html with metod while\r\n    while (containerTask.firstChild) {\r\n        containerTask.removeChild(containerTask.firstChild);\r\n    }\r\n}"]}