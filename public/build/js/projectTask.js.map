{"version":3,"sources":["projectTask.js"],"names":["startApp","btnAddTask","getProjectTasks","getCountProjectTasks","document","addEventListener","setInterval","tasks","async","url","getUrlProject","response","fetch","result","json","showProjectTasks","error","message","counterTasks","length","taskFinished","filter","state","getElementById","textContent","modal","edite","task","Swal","fire","title","html","showCancelButton","showCloseButton","confirmButtonText","confirmButtonColor","cancelButtonText","cancelButtonColor","preConfirm","value","trim","showValidationMessage","then","isConfirmed","updateTask","createTask","data","FormData","append","method","body","type","taskObj","id","String","date","projectId","projectParameters","URLSearchParams","window","location","search","Object","fromEntries","entries","changeState","icon","showDenyButton","denyButtonText","newState","map","confirmDelete","deleteTask","waitTask","clearHTML","alertDiv","createElement","className","alert","setAttribute","appendChild","stateObj","pending","completed","forEach","liTask","divInfo","titleTask","divFooter","dateTask","dateHour","dateHourObj","Date","currentDate","differenceTime","minutesElapsed","Math","floor","console","log","getDate","months","getMonth","stateTask","toLowerCase","dataset","classList","add","onclick","divActions","dropdownOptions","innerHTML","dropmenu","liEdite","btnEdite","liDelete","btnDelete","containerTask","firstChild","removeChild","text","position","showConfirmButton","allowOutsideClick","timer"],"mappings":"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","file":"projectTask.js","sourcesContent":["// When document is ready\r\ndocument.addEventListener('DOMContentLoaded', startApp);\r\n\r\n// call back functios\r\nfunction startApp() {\r\n    btnAddTask();\r\n    getProjectTasks();\r\n    getCountProjectTasks();\r\n}\r\n\r\n// updates backgrounds\r\nsetInterval(() => {\r\n    getProjectTasks();\r\n}, 10000);\r\n\r\n\r\n// global variables\r\nlet tasks = [];\r\n\r\n// get project tasks\r\nasync function getProjectTasks() {\r\n    // connect to url\r\n    try {\r\n        // id\r\n        const id = getUrlProject();\r\n        // url\r\n        const url = `/dashboard/project-tasks?id=${id}`;\r\n        // response\r\n        const response = await fetch(url);\r\n        // result\r\n        const result = await response.json();\r\n        // save variable tasks\r\n        tasks = result.tasks;\r\n        // callback function \r\n        showProjectTasks();\r\n    } catch (error) {\r\n        message('error', 'Task Failed', 'An error occurred while getting the task, please try again later!');\r\n        return;\r\n    }\r\n}\r\n\r\nasync function getCountProjectTasks() {\r\n    try {\r\n\r\n        // id\r\n        const id = getUrlProject();\r\n        // url\r\n        const url = `/dashboard/project-tasks?id=${id}`;\r\n        // response\r\n        const response = await fetch(url);\r\n        // result\r\n        const result = await response.json(); \r\n        const counterTasks = result.tasks.length;\r\n        const tasksCompleted = tasks.filter(tasks => tasks.state === 'completed');\r\n        const taskFinished = tasksCompleted.length;\r\n        document.getElementById('count-project-tasks').textContent = ` ${taskFinished} / ${counterTasks} tasks completed`;\r\n    } catch (error) {\r\n        message('error', 'Task Failed', 'An error occurred while getting the task, please try again later!');\r\n        return;\r\n    }\r\n}\r\n\r\nfunction btnAddTask() {\r\n    // Declarated variables\r\n    const btnAddTask = document.getElementById('add-project-task');\r\n    btnAddTask.addEventListener('click', () => {\r\n        modal();\r\n    });\r\n}\r\n\r\n// function that open Modal with a click\r\nfunction modal(edite = false, task = {}) {\r\n    Swal.fire({\r\n        title: `${edite ? 'Edite task details' : 'Enter task details'}`,\r\n        html: `\r\n            <div class=\"container-task\">\r\n                <div class=\"container-task__item\">\r\n                    <label for=\"title\" class=\"swal2-label\">Task Title:</label>\r\n                    <input type=\"text\" id=\"title\" placeholder=\"${edite ? 'Edite title task...' : 'Task title here...'}\" class=\"swal2-input\" value=\"${task.title ? task.title : ''}\">\r\n                </div>\r\n            </div>\r\n        `,\r\n        showCancelButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonText: `${edite ? 'Save changes' : 'Add Task'}`,\r\n        confirmButtonColor: '#697199',\r\n        cancelButtonText: 'Cancel',\r\n        cancelButtonColor: '#DC3741',\r\n        preConfirm: () => {\r\n            const title = document.getElementById('title').value.trim();\r\n            if (title === '') {\r\n                Swal.showValidationMessage('Make sure all fields are complete.');\r\n                return false;\r\n            }\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed == true) {\r\n            const title = document.getElementById('title').value.trim();\r\n            if(edite) {\r\n                task.title = title;\r\n                updateTask(task);\r\n            } else {\r\n                // function create task with parameters \r\n                createTask(title);\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n// function for create a new task with the information using API Fetch Async await\r\nasync function createTask(title) {\r\n    // to make request\r\n    const data = new FormData();\r\n    data.append('title', title);\r\n    data.append('projectId', getUrlProject());\r\n\r\n    try {\r\n        const url = 'http://localhost:3000/api/project-tasks/create';\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: data\r\n        });\r\n        const result = await response.json();\r\n        if(result.type === 'success') {\r\n            message('success', 'Task Created Successfully', 'The task was created successfully!');\r\n            // create new task Obj\r\n            const taskObj = {\r\n                id: String(result.id),\r\n                title: title,\r\n                date: result.date,\r\n                projectId: result.projectId,\r\n                state: \"pending\"\r\n            }\r\n            tasks = [...tasks, taskObj];\r\n            showProjectTasks();\r\n            getCountProjectTasks();\r\n        }\r\n    } catch (error) {\r\n        message('error', 'Task Create Failed', 'An error occurred while creating the task, please try again later!');\r\n        return;\r\n    }\r\n}\r\n\r\n// function that get url project \r\nfunction getUrlProject() {\r\n    const projectParameters = new URLSearchParams(window.location.search);\r\n    const project = Object.fromEntries(projectParameters.entries());\r\n    return project.id;\r\n}\r\n\r\n// edite task \r\nfunction changeState(task) {\r\n    Swal.fire({\r\n        icon: 'question',\r\n        title: \"Do you want to update the status of the task?\",\r\n        showDenyButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonText: \"Update\",\r\n        denyButtonText: `Cancel`,\r\n        confirmButtonColor: '#697199',\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            const newState = task.state === \"completed\" ? \"pending\" : \"completed\";\r\n            task.state = newState;\r\n            updateTask(task);\r\n        } \r\n    });\r\n}\r\n\r\n// function for update task\r\nasync function updateTask(task) {\r\n    // applying destructuring\r\n    const {id, title, state} = task;\r\n    const data = new FormData();\r\n    data.append('id', id);\r\n    data.append('title', title);\r\n    data.append('state', state);\r\n    data.append('projectId', getUrlProject());\r\n    // create trychatch\r\n    try {\r\n        // Connect to the API \r\n        const url = 'http://localhost:3000/api/project-tasks/update';\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: data\r\n        });\r\n        const result = await response.json();    \r\n        if (result.type === 'success') {\r\n            message('success', 'Task Status Updated', `The task was updated successfully!`);\r\n        }\r\n        tasks = tasks.map(taskObj => {\r\n            if(taskObj.id === id) {\r\n                taskObj.title = title;\r\n                taskObj.state = state;\r\n            }\r\n            return taskObj;\r\n        });\r\n        showProjectTasks();\r\n        getCountProjectTasks();\r\n    } catch (error) {\r\n        message('error', 'Task Updatgin Failed', 'An error occurred while updating the task, please try again later!');\r\n        return;\r\n    }\r\n}\r\n\r\n// message confirm delete\r\nfunction confirmDelete(task) {\r\n    Swal.fire({\r\n        icon: 'question',\r\n        title: \"Are you sure you want to delete the task?\",\r\n        showCancelButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonText: \"Delete\",\r\n        cancelButtonText: `Cancel`,\r\n        confirmButtonColor: '#697199',\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            deleteTask(task);\r\n        }\r\n    });\r\n}\r\n\r\n// delete confirm\r\nasync function deleteTask(task) {\r\n    // applying destructuring\r\n    const {id, title, date, state} = task;\r\n    const data = new FormData();\r\n    data.append('id', id);\r\n    data.append('title', title);\r\n    data.append('date', date);\r\n    data.append('state', state);\r\n    data.append('projectId', getUrlProject());\r\n\r\n    try {\r\n        const url = 'http://localhost:3000/api/project-tasks/delete';\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: data\r\n        }); \r\n        const result = await response.json();\r\n        if(result.type === 'success') {\r\n            message('success', 'Task Deleted Succesffully', 'The task was deleted successfully!');\r\n            // filter task deleted\r\n            tasks = tasks.filter( waitTask => waitTask.id !== task.id);\r\n            // call function \r\n            getCountProjectTasks();\r\n            showProjectTasks();\r\n        }\r\n    } catch (error) {\r\n        message('error', 'Task deleted Failed', 'An error occurred while deleting the task, please try again later!');\r\n        return;\r\n    }\r\n}\r\n\r\n\r\n// show project tasks\r\nfunction showProjectTasks() {\r\n    // clean html\r\n    clearHTML();\r\n    // if project task is === 0\r\n    if(tasks.length === 0) {\r\n        // create errorDiv o alertDiv\r\n        const alertDiv = document.createElement('DIV');\r\n        // add classes to alertDiv\r\n        alertDiv.className = 'd-flex justify-content-center mt-5 alert w-100';\r\n        // create alert \r\n        const alert = document.createElement('DIV');\r\n        // add classes\r\n        alert.className = 'alert alert-danger fs-3 fw-semibold text-center w-auto';\r\n        // add attributes\r\n        alert.setAttribute = ('role', 'alert');\r\n        // add text\r\n        alert.textContent = 'It looks like you haven`t added any tasks yet, start by adding a task!';\r\n        // appenchild to alert\r\n        alertDiv.appendChild(alert);\r\n        // adding alert to container \r\n        document.getElementById('container-project-tasks').appendChild(alertDiv);\r\n        return;\r\n    }\r\n\r\n    // variables states obj\r\n    const stateObj = {\r\n        pending: 'pending',\r\n        completed: 'completed'\r\n    }\r\n\r\n    tasks.forEach( task => {\r\n        // create li\r\n        const liTask = document.createElement('LI');\r\n        liTask.className = 'task rounded-4 d-flex align-items-center justify-content-between p-3 rounded mb-3 shadow-sm';\r\n\r\n        // create div, this div contains \"task pending and title\"\r\n        const divInfo = document.createElement('DIV');\r\n        divInfo.className = 'task__info';\r\n        // title task\r\n        const titleTask = document.createElement('H4')\r\n        titleTask.className = 'task__title fw-semibold';\r\n        titleTask.textContent = task.title;\r\n\r\n        // footer task\r\n        const divFooter = document.createElement('DIV');\r\n        divFooter.className = 'task__footer d-flex align-items-center gap-3';\r\n        // date \r\n        const dateTask = document.createElement('P');\r\n        // assign up classes\r\n        dateTask.className = 'task__date mb-0 fs-5';\r\n        // assing up date on variable\r\n        const dateHour = task.date;\r\n        // Convert date from string to Date object\r\n        const dateHourObj = new Date(dateHour);\r\n        // Get the current date and time\r\n        const currentDate = new Date();\r\n        // Calculate the difference in milliseconds\r\n        const differenceTime = currentDate - dateHourObj;\r\n        // convert the difference to minutes\r\n        const minutesElapsed = Math.floor(differenceTime / (1000 * 60));\r\n        // show message \r\n        let message = '';\r\n        console.log('Tiempo transcurrido: ',minutesElapsed);\r\n        if (minutesElapsed <= 2) {\r\n            message = 'Added now';\r\n        } else if (minutesElapsed <= 10) {\r\n            message = `${minutesElapsed} min ago`;\r\n        } else if (dateHourObj.getDate() === currentDate.getDate()) {\r\n            message = 'Added today';\r\n        }else {\r\n            const months = [\r\n                \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n            ];\r\n            const date = dateHourObj.getDate();\r\n            const monthIndex = dateHourObj.getMonth();\r\n            const dateTime = `${months[monthIndex]} ${date}`;\r\n            message = `${dateTime}`;\r\n        }\r\n        dateTask.textContent = message;\r\n\r\n        // task pending\r\n        const stateTask = document.createElement('BUTTON');\r\n        stateTask.setAttribute('type', 'button');\r\n        stateTask.className = `card__button-state rounded-2 fw-bold fs-6 text-uppercase p-2 ${stateObj[task.state].toLowerCase()}`;\r\n        stateTask.textContent = stateObj[task.state];\r\n        stateTask.dataset.stateTask = task.state;\r\n        // conditional for delete or add classes to button\r\n        if (task.state === \"pending\") {\r\n            stateTask.classList.add('card__button-state--pending');\r\n        } else {\r\n            stateTask.classList.add('card__button-state--complete');\r\n        }\r\n        stateTask.onclick = function() {\r\n            changeState({...task})\r\n        }\r\n\r\n        // div with contains button and date\r\n        const divActions = document.createElement('DIV');\r\n        divActions.className = 'd-flex align-items-center gap-4';\r\n\r\n        // create button dropdown\r\n        const dropdownOptions = document.createElement('DIV');\r\n        dropdownOptions.innerHTML = \r\n        `\r\n            <button type=\"button\" class=\"btn options btn-outline-transparent\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" aria-label=\"button with actions\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-three-dots-vertical\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0\"/>\r\n                </svg>\r\n            </button>\r\n        `;\r\n\r\n        // create dropdown menu\r\n        const dropmenu = document.createElement('UL');\r\n        dropmenu.classList.add('dropdown-menu', 'p-2');\r\n\r\n        // create LI for button edite and delete task\r\n        const liEdite = document.createElement('LI');\r\n        // button edite\r\n        const btnEdite = document.createElement('BUTTON');\r\n        btnEdite.setAttribute('type', 'button');\r\n        btnEdite.className = 'button-actions rounded button-actions--edite d-flex align-items-center gap-3 w-100 fs-4 mb-2\"';\r\n        btnEdite.innerHTML = \r\n        `\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\r\n            </svg>\r\n            <span>Edite</span>\r\n        `;\r\n        btnEdite.onclick = function() {\r\n            modal( true, {...task} );\r\n        }\r\n\r\n        // create LI for button edite and delete task\r\n        const liDelete = document.createElement('LI');\r\n        // button delete\r\n        const btnDelete = document.createElement('BUTTON');\r\n        btnDelete.setAttribute('type', 'button');\r\n        btnDelete.className = 'button-actions rounded button-actions--delete d-flex align-items-center gap-3 w-100 fs-4';\r\n        btnDelete.innerHTML = \r\n        `\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\r\n            </svg>\r\n            <span>Delete</span>\r\n        `;\r\n        btnDelete.onclick = function() {\r\n            confirmDelete(task);\r\n        }\r\n\r\n        // appendchild to liTask\r\n        liTask.appendChild(divInfo);\r\n        divInfo.appendChild(titleTask);\r\n        divInfo.appendChild(divFooter);\r\n        divFooter.appendChild(stateTask);\r\n        divFooter.appendChild(dateTask);\r\n        liTask.appendChild(divActions);\r\n        divActions.appendChild(dropdownOptions);\r\n        dropdownOptions.appendChild(dropmenu);\r\n        dropmenu.appendChild(liEdite);\r\n        dropmenu.appendChild(liDelete);\r\n        liEdite.appendChild(btnEdite);\r\n        liDelete.appendChild(btnDelete);\r\n\r\n        // append with container\r\n        document.getElementById('container-project-tasks').appendChild(liTask);\r\n    });\r\n}\r\n\r\n// clear html\r\nfunction clearHTML() {\r\n    // select container to clean\r\n    const containerTask = document.getElementById('container-project-tasks');\r\n    // clean html with method while\r\n    while(containerTask.firstChild) {\r\n        containerTask.removeChild(containerTask.firstChild);\r\n    }\r\n}\r\n\r\n// personalized message\r\nfunction message(type, title, text) {\r\n    Swal.fire({\r\n        position: 'top-end',\r\n        icon: type,\r\n        title: title,\r\n        text: text,\r\n        showConfirmButton: false,\r\n        allowOutsideClick: false,\r\n        timer: 2000\r\n    });\r\n}\r\n\r\n"]}