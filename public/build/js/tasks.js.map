{"version":3,"sources":["tasks.js"],"names":["getCountTask","getCountTaskPending","getCountTaskCompleted","startApp","btnAddTask","getTask","document","addEventListener","tasks","filteredTasks","inputSearch","getElementById","filterTasksBySearch","searchTerm","value","trim","toLowerCase","filter","task","title","includes","description","showTasks","filters","filterTask","e","target","state","priority","async","url","response","fetch","result","json","error","message","modal","edite","Swal","fire","html","showCancelButton","showCloseButton","confirmButtonText","confirmButtonColor","cancelButtonText","cancelButtonColor","preConfirm","taskTitle","taskDescription","taskPriority","showValidationMessage","then","isConfirmed","updateTask","createTask","data","FormData","append","method","body","type","taskObj","id","String","creation_date","owner_id","changeState","icon","showDenyButton","denyButtonText","newState","map","confirmDeleteTask","deleteTask","waitTask","length","viewTask","showConfirmButton","spanState","spanPriority","classList","add","clearHTML","pendingTotal","completedTotal","lowTotal","mediumTotal","highTotal","arrayTask","alertDiv","createElement","className","alert","setAttribute","textContent","appendChild","stateTask","pending","completed","priorityTask","low","medium","high","forEach","card","cardContent","cardHeader","dataset","dropdownOptions","innerHTML","dropmenu","liEdite","btnEditeTask","onclick","liDelete","btnDeleteTask","content","cardActions","btnStateTask","btnViewCard","pendings","optionPending","disabled","completeds","optionCompleted","lowPriority","optionLow","mediumPriority","optionMedium","highPriority","optionHigh","text","position","allowOutsideClick","timer","containerTask","firstChild","removeChild"],"mappings":"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","file":"tasks.js","sourcesContent":["// import functions\r\nimport {getCountTask, getCountTaskPending, getCountTaskCompleted} from './sidebar.js';\r\n\r\n// When document is ready\r\ndocument.addEventListener('DOMContentLoaded', startApp);\r\n\r\n// call back functios\r\nfunction startApp() {\r\n    btnAddTask();\r\n    getTask();\r\n}\r\n\r\n// variable global for the task array\r\nlet tasks = [];\r\nlet filteredTasks = [];\r\n\r\n// element input search \r\nconst inputSearch = document.getElementById('search-input');\r\ninputSearch.addEventListener('input', filterTasksBySearch);\r\n\r\nfunction filterTasksBySearch() {\r\n    const searchTerm = inputSearch.value.trim().toLowerCase();\r\n    if (searchTerm !== '') {\r\n        filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(searchTerm) || task.description.toLowerCase().includes(searchTerm));\r\n    } else {\r\n        filteredTasks = [];\r\n    }\r\n    showTasks();\r\n}\r\n\r\n// search filters\r\nconst filters = document.getElementById('filters');\r\nfilters.addEventListener('change', filterTask);\r\n\r\n// function for filter task\r\nfunction filterTask(e) {\r\n    const filter = e.target.value;\r\n    if(filter !== '') {\r\n        filteredTasks = tasks.filter(task => task.state === filter || task.priority === filter);\r\n    } else {\r\n        filteredTasks = [];\r\n    }  \r\n    showTasks();\r\n}\r\n\r\n// function that iterates over the tasks and show them\r\nasync function getTask() {\r\n    try {\r\n        // create url and consume API\r\n        const url = 'http://localhost:3000/api/tasks';\r\n        // Apply fetch to url\r\n        const response = await fetch(url);\r\n        // will see the result with format json\r\n        const result = await response.json();\r\n        tasks = result.tasks;\r\n        // callback function \r\n        showTasks()     \r\n    } catch (error) {\r\n        message('error', 'An unexpected error occurred while getting the project!', 'Reload the page or try again later');\r\n        return;\r\n    }\r\n}\r\n\r\n// Adding tasks with API Fetch and async await\r\nfunction btnAddTask() {\r\n    // Declarated variables\r\n    const btnAddTask = document.getElementById('btn-add-task');\r\n    btnAddTask.addEventListener('click', () => {\r\n        modal();\r\n    });\r\n}\r\n\r\n// function that open Modal with a click\r\nfunction modal(edite = false, task = {}) {\r\n    Swal.fire({\r\n        title: `${edite ? 'Edite task details' : 'Enter task details'}`,\r\n        html: `\r\n            <div class=\"container-task\">\r\n                <div class=\"container-task__item\">\r\n                    <label for=\"task-title\" class=\"swal2-label\">Task Title:</label>\r\n                    <input type=\"text\" id=\"task-title\" placeholder=\"${edite ? 'Edite title task...' : 'Task title here...'}\" class=\"swal2-input\" value=\"${task.title ? task.title : ''}\">\r\n                </div>\r\n                <div class=\"container-task__item\">\r\n                    <label for=\"task-description\" class=\"swal2-label\">Task Description:</label>\r\n                    <textarea id=\"task-description\" placeholder=\"${edite ? 'Edite description task...' : 'Task description here...'}\" class=\"swal2-textarea\">${task.description ? task.description : ''}</textarea>\r\n                </div>\r\n                <div class=\"container-task__item\">\r\n                    <label for=\"task-priority\" class=\"swal2-label\">Priority:</label>\r\n                    <select id=\"task-priority\" class=\"swal2-select\">\r\n                        <option value=\"${task.priority ? task.priority : ''}\" selected disabled >${task.priority ? 'Set priority: ' + task.priority : 'Select an option'}</option>\r\n                        <option value=\"low\">Low</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"high\">High</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        `,\r\n        showCancelButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonText: `${edite ? 'Save changes' : 'Add Task'}`,\r\n        confirmButtonColor: '#697199',\r\n        cancelButtonText: 'Cancel',\r\n        cancelButtonColor: '#DC3741',\r\n        preConfirm: () => {\r\n            const taskTitle = document.getElementById('task-title').value.trim();\r\n            const taskDescription = document.getElementById('task-description').value.trim();\r\n            const taskPriority = document.getElementById('task-priority').value.trim();\r\n            if (taskTitle === '' || taskDescription === '' || taskPriority === '') {\r\n                Swal.showValidationMessage('Make sure all fields are complete.');\r\n                return false;\r\n            }\r\n        }\r\n    }).then((result) => {\r\n        if (result.isConfirmed == true) {\r\n            const taskTitle = document.getElementById('task-title').value.trim();\r\n            const taskDescription = document.getElementById('task-description').value.trim();\r\n            const taskPriority = document.getElementById('task-priority').value;\r\n            if(edite) {\r\n                task.title = taskTitle;\r\n                task.description = taskDescription;\r\n                task.priority = taskPriority;\r\n                updateTask(task);\r\n            } else {\r\n                // function create task with parameters \r\n                createTask(taskTitle, taskDescription, taskPriority);\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n// function for create a new task with the information using API Fetch Async await\r\nasync function createTask(title, description, priority) {\r\n    // build request\r\n    const data = new FormData();\r\n    data.append('title', title);\r\n    data.append('description', description);\r\n    data.append('priority', priority);\r\n\r\n    // create try catch\r\n    try {\r\n        // Connect to the API\r\n        const url = 'http://localhost:3000/api/task/create';\r\n        // await for an response of the url\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: data\r\n        });\r\n        // if response is 200 or OK so...\r\n        const result = await response.json();\r\n        if(result.type === 'success') {\r\n            message('success', 'Task Created Successfully', `The task was created successfully!`);\r\n            // create new task Obj\r\n            const taskObj = {\r\n                id: String(result.id),\r\n                title: title,\r\n                description: description,\r\n                priority: priority,\r\n                creation_date: result.creation_date,\r\n                owner_id: result.owner_id,\r\n                state: \"pending\",\r\n            }\r\n            tasks = [...tasks, taskObj];\r\n            \r\n            // Check if the task meets the current filter\r\n            const filter = filters.value;\r\n            if (filter === '' || taskObj.state === filter || taskObj.priority === filter) {\r\n                filteredTasks = [...filteredTasks, taskObj];\r\n            }\r\n            getCountTask();\r\n            getCountTaskPending();\r\n            getCountTaskCompleted();\r\n            showTasks();\r\n        }\r\n    } catch (error) {\r\n        message('error', 'Task Create Failed', 'An error occurred while creating the task, please try again later!');\r\n        return;\r\n    }\r\n\r\n    // for(let value of data.values()) {\r\n    //     console.log(value);\r\n    // }\r\n}\r\n\r\n// function that change state task\r\nfunction changeState(task) {\r\n    Swal.fire({\r\n        icon: 'question',\r\n        title: \"Do you want to update the status of the task?\",\r\n        showDenyButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonText: \"Update\",\r\n        denyButtonText: `Cancel`,\r\n        confirmButtonColor: '#697199',\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            const newState = task.state === \"completed\" ? \"pending\" : \"completed\";\r\n            task.state = newState;\r\n            updateTask(task);\r\n        } \r\n    });\r\n}\r\n\r\n// function for update task\r\nasync function updateTask(task) {\r\n    const {id, title, description, priority, state, owner_id, creation_date} = task;\r\n    const data = new FormData();\r\n    data.append('id', id);\r\n    data.append('title', title);\r\n    data.append('description', description);\r\n    data.append('priority', priority);\r\n    data.append('state', state);\r\n    data.append('owner_id', owner_id);\r\n    data.append('creation_date', creation_date);\r\n\r\n    // create trychatch\r\n    try {\r\n        // Connect to the API \r\n        const url = 'http://localhost:3000/api/task/update';\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: data\r\n        });\r\n        const result = await response.json();\r\n        if (result.type === 'success') {\r\n            message('success', 'Task Status Updated', `The task was updated successfully!`);\r\n        }\r\n        tasks = tasks.map(taskObj => {\r\n            if(taskObj.id === id) {\r\n                taskObj.title = title;\r\n                taskObj.description = description;\r\n                taskObj.priority = priority;\r\n                taskObj.state = state;\r\n            }\r\n            return taskObj;\r\n        });\r\n        // mostrar tareas de nuevo\r\n        getCountTaskPending();\r\n        getCountTaskCompleted();\r\n        showTasks();\r\n    } catch (error) {\r\n        message('error', 'Task Updatgin Failed', 'An error occurred while updating the task, please try again later!');\r\n        return;\r\n    }\r\n\r\n}\r\n\r\n// function that aked delete task\r\nfunction confirmDeleteTask(task) {\r\n    Swal.fire({\r\n        icon: 'question',\r\n        title: \"Are you sure you want to delete the task?\",\r\n        showCancelButton: true,\r\n        showCloseButton: true,\r\n        confirmButtonText: \"Delete\",\r\n        cancelButtonText: `Cancel`,\r\n        confirmButtonColor: '#697199',\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            deleteTask(task);\r\n        }\r\n    });\r\n}\r\n\r\n// function that delete task\r\nasync function deleteTask(task) {\r\n    // applying destructuring\r\n    const {id, title, description, priority, state, owner_id, creation_date} = task;\r\n    const data = new FormData();\r\n    data.append('id', id);\r\n    data.append('title', title);\r\n    data.append('description', description);\r\n    data.append('priority', priority);\r\n    data.append('state', state);\r\n    data.append('owner_id', owner_id);\r\n    data.append('creation_date', creation_date);\r\n\r\n    try {\r\n        const url = 'http://localhost:3000/api/task/delete';\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: data\r\n        }); \r\n        const result = await response.json();\r\n        if(result.type === 'success') {\r\n            message('success', 'Task Deleted Succesffully', 'The task was deleted successfully!');\r\n            // filter task deleted\r\n            tasks = tasks.filter( waitTask => waitTask.id !== task.id);\r\n            // filter array task deleted\r\n            filteredTasks = filteredTasks.filter(waitTask => waitTask.id !== task.id);\r\n            // evaluate the task filter so that when it cointains nothing, the value of the select is reset.\r\n            if (filteredTasks.length === 0) {\r\n                filters.value = '';\r\n            }\r\n            // show again all task\r\n            getCountTask();\r\n            getCountTaskPending();\r\n            getCountTaskCompleted();\r\n            showTasks();\r\n        }\r\n    } catch (error) {\r\n        message('error', 'Task deleted Failed', 'An error occurred while deleting the task, please try again later!');\r\n        return;\r\n    }\r\n}\r\n\r\n// function that view task in mode lg\r\nfunction viewTask(task) {\r\n    Swal.fire({\r\n        html: `\r\n            <div class=\"view-task text-start\">\r\n                <div class=\"d-flex flex-column\">\r\n                    <p class=\"view-task__header fs-5 mb-1\">Created on the day: <span class=\"fw-bold\">${task.creation_date}</span></p>\r\n                </div>\r\n                <div>\r\n                    <h1 class=\"view-task__title fw-bold mb-2\">${task.title}</h1>\r\n                    <p class=\"view-task__description fs-4\">Description: ${task.description}</p>\r\n                </div>\r\n                <div class=\"d-flex align-items-center justify-content-end gap-3 mt-5 border-top pt-3\">\r\n                    <p class=\"view-task__info fs-5 fw-semibold text-capitalize mb-0\">Status: <span class=\"view-task__span-state\" id=\"span-state\">${task.state}</span></p>\r\n                    <p class=\"view-task__info fs-5 fw-semibold text-capitalize mb-0\">Priority: <span class=\"view-task__span\" id=\"span-priority\">${task.priority}</span></p>\r\n                </div>\r\n            </div>\r\n        `,\r\n        showCloseButton: true,\r\n        showConfirmButton: false,\r\n    });\r\n    const spanState = document.getElementById('span-state');\r\n    const spanPriority = document.getElementById('span-priority');\r\n    if(task.priority === 'low') {\r\n        spanPriority.classList.add('view-task__span--low');\r\n    } else if(task.priority === 'medium') {\r\n        spanPriority.classList.add('view-task__span--medium');\r\n    } else {\r\n        spanPriority.classList.add('view-task__span--high');\r\n    }\r\n    if(task.state === 'completed') {\r\n        spanState.classList.add('view-task__span-state--complete');\r\n    } else {\r\n        spanState.classList.add('view-task__span-state--pending');\r\n    }\r\n    \r\n}\r\n\r\n// function that show task\r\nfunction showTasks() {\r\n    // clean html \r\n    clearHTML();\r\n    // get pending task\r\n    pendingTotal();\r\n    // get completed task\r\n    completedTotal();\r\n    // get low priority task\r\n    lowTotal();\r\n    // get medium priority task\r\n    mediumTotal();\r\n    // get high priority task\r\n    highTotal();\r\n    // create array filter\r\n    const arrayTask = filteredTasks.length ? filteredTasks : tasks;\r\n    // iterating\r\n    if(arrayTask.length === 0) {\r\n        // create errorDiv o alertDiv\r\n        const alertDiv = document.createElement('DIV');\r\n        // add classes to alertDiv\r\n        alertDiv.className = 'd-flex justify-content-center alert w-100';\r\n        // create alert \r\n        const alert = document.createElement('DIV');\r\n        // add classes\r\n        alert.className = 'alert alert-danger fs-3 fw-semibold text-center w-auto';\r\n        // add attributes\r\n        alert.setAttribute = ('role', 'alert');\r\n        // add text\r\n        alert.textContent = 'It looks like you haven`t added any tasks yet, start by adding a task!';\r\n        // appenchild to alert\r\n        alertDiv.appendChild(alert);\r\n        // adding alert to container \r\n        document.getElementById('content-task').appendChild(alertDiv);\r\n        return;\r\n    }\r\n\r\n    // variables states obj\r\n    const stateTask = {\r\n        pending: 'pending',\r\n        completed: 'complete'\r\n    }\r\n\r\n    // variables priority obj\r\n    const priorityTask = {\r\n        low: 'low',\r\n        medium: 'medium',\r\n        high: 'high'\r\n    }\r\n\r\n    // iterate tasks\r\n    arrayTask.forEach(task => {\r\n        // create card div\r\n        const card = document.createElement('DIV');\r\n        card.className = 'card rounded-4 ';\r\n\r\n        // create card content\r\n        const cardContent = document.createElement('DIV');\r\n        cardContent.className = 'card__content-card m-4';\r\n\r\n        // create header card \r\n        const cardHeader = document.createElement('DIV');\r\n        cardHeader.className = 'd-flex align-items-center justify-content-between';\r\n\r\n        // create span priority\r\n        const priority = document.createElement('SPAN');\r\n        priority.classList.add('card__span-priority');\r\n        priority.classList.add(`${priorityTask[task.priority]}`);\r\n        priority.dataset.priorityTask = task.priority;\r\n\r\n        if(task.priority === 'low') {\r\n            priority.classList.add('card__span-priority--low');\r\n        } else if (task.priority === 'medium') {\r\n            priority.classList.add('card__span-priority--medium');\r\n        } else if (task.priority === 'high'){\r\n            priority.classList.add('card__span-priority--high');\r\n        }\r\n\r\n        // create button dropdown\r\n        const dropdownOptions = document.createElement('DIV');\r\n        dropdownOptions.innerHTML = \r\n\r\n        `\r\n            <button type=\"button\" class=\"btn-drop-down btn-outline-transparent bg-transparent\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" aria-label=\"button with actions\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\" />\r\n                </svg>\r\n            </button>\r\n        `;\r\n\r\n        // create dropdown menu\r\n        const dropmenu = document.createElement('UL');\r\n        dropmenu.classList.add('dropdown-menu', 'p-2');\r\n\r\n        // create li for btn edite\r\n        const liEdite = document.createElement('LI');\r\n\r\n        // create btn edite\r\n        const btnEditeTask = document.createElement('BUTTON');\r\n        btnEditeTask.setAttribute('type', 'button');\r\n        btnEditeTask.className = 'button-actions rounded button-actions--edite d-flex align-items-center gap-3 w-100 fs-4 mb-2';\r\n        btnEditeTask.innerHTML = \r\n        `\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" />\r\n            </svg>\r\n            <span>Edite</span>\r\n        `;\r\n        btnEditeTask.onclick = function() {\r\n            modal(true, {...task});\r\n        }\r\n\r\n        // create li for btn edite\r\n        const liDelete = document.createElement('LI');\r\n        // create btn delete task\r\n        const btnDeleteTask = document.createElement('BUTTON');\r\n        btnDeleteTask.setAttribute('type', 'button');\r\n        btnDeleteTask.className = 'button-actions rounded button-actions--delete d-flex align-items-center gap-3 w-100 fs-4';\r\n        btnDeleteTask.innerHTML = \r\n        `\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\r\n            </svg>\r\n            <span>Delete</span>\r\n        `;\r\n        btnDeleteTask.onclick = function() {\r\n            confirmDeleteTask(task);\r\n        }\r\n\r\n        // create div content\r\n        const content = document.createElement('DIV');\r\n        content.className = 'card__content mb-4';\r\n        content.innerHTML = \r\n        `\r\n            <h2 class=\"card__title fw-semibold m-0\">${task.title}</h2>\r\n            <p class=\"card__description mt-2 fs-4\">${task.description}</p>\r\n        `;\r\n\r\n        // create div actions buttons\r\n        const cardActions = document.createElement('DIV');\r\n        cardActions.className = 'd-flex align-items-center justify-content-end gap-3';\r\n\r\n        // create buttons - button state \r\n        const btnStateTask = document.createElement('BUTTON');\r\n        btnStateTask.setAttribute('type', 'button');\r\n        btnStateTask.className = `card__button-state rounded-2 fw-bold fs-5 text-uppercase px-3 ${stateTask[task.state].toLowerCase()}`;\r\n        btnStateTask.textContent = stateTask[task.state];\r\n        btnStateTask.dataset.stateTask = task.state;\r\n        btnStateTask.onclick = function() {\r\n            changeState({...task});\r\n        }\r\n        // conditional for delete or add classes to button\r\n        if (task.state === \"pending\") {\r\n            btnStateTask.classList.add('card__button-state--pending');\r\n        } else {\r\n            btnStateTask.classList.add('card__button-state--complete');\r\n        }\r\n\r\n        // button view card\r\n        const btnViewCard = document.createElement('BUTTON');\r\n        btnViewCard.className = 'card__button-view rounded px-3';\r\n        btnViewCard.setAttribute('aria-label', 'Button for view more information about task')\r\n        btnViewCard.innerHTML =\r\n        `\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-eye\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8M1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"/>\r\n                <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5M4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0\"/>\r\n            </svg>\r\n        `;\r\n        btnViewCard.onclick = function() {\r\n            viewTask(task);\r\n        }\r\n        \r\n        // insert elements\r\n        card.appendChild(cardContent);\r\n        cardContent.appendChild(cardHeader);\r\n        cardHeader.appendChild(priority);\r\n        cardHeader.appendChild(dropdownOptions);\r\n        liEdite.appendChild(btnEditeTask);\r\n        liDelete.appendChild(btnDeleteTask);\r\n        dropmenu.appendChild(liEdite);\r\n        dropmenu.appendChild(liDelete);\r\n        dropdownOptions.appendChild(dropmenu);\r\n        cardContent.appendChild(content);\r\n        cardContent.appendChild(cardActions);\r\n        cardActions.appendChild(btnStateTask);\r\n        cardActions.appendChild(btnViewCard);\r\n        \r\n        // insert in document html and container tasks\r\n        document.getElementById('content-task').appendChild(card);\r\n    });\r\n}\r\n\r\n// function that filter task by pending\r\nfunction pendingTotal() {\r\n    const pendings = tasks.filter(task => task.state === \"pending\");\r\n    const optionPending = document.getElementById('pending');\r\n    if(pendings.length === 0) {\r\n        optionPending.disabled = true;\r\n    } else {\r\n        optionPending.disabled = false;\r\n    }\r\n    \r\n}\r\n\r\n// function that filter task by completed\r\nfunction completedTotal() {\r\n    const completeds = tasks.filter(task => task.state === \"completed\");\r\n    const optionCompleted = document.getElementById('completed');\r\n    if(completeds.length === 0) {\r\n        optionCompleted.disabled = true;\r\n    } else {\r\n        optionCompleted.disabled = false;\r\n    }\r\n}\r\n\r\n// function that filter task by low priority\r\nfunction lowTotal() {\r\n    const lowPriority = tasks.filter(task => task.priority === \"low\");\r\n    const optionLow = document.getElementById('low');\r\n    if(lowPriority.length === 0) {\r\n        optionLow.disabled = true;\r\n    } else {\r\n        optionLow.disabled = false;\r\n    }\r\n}\r\n\r\n// function that filter task by medium priority\r\nfunction mediumTotal() {\r\n    const mediumPriority = tasks.filter(task => task.priority === \"medium\");\r\n    const optionMedium = document.getElementById('medium');\r\n    if(mediumPriority.length === 0) {\r\n        optionMedium.disabled = true;\r\n    } else {\r\n        optionMedium.disabled = false;\r\n    }\r\n}\r\n\r\n// function that filter task by high priority\r\nfunction highTotal() {\r\n    const highPriority = tasks.filter(task => task.priority === \"high\");\r\n    const optionHigh = document.getElementById('high');\r\n    if(highPriority.length === 0) {\r\n        optionHigh.disabled = true;\r\n    } else {\r\n        optionHigh.disabled = false;\r\n    }\r\n}\r\n\r\n// personalized message\r\nfunction message(type, title, text) {\r\n    Swal.fire({\r\n        position: 'top-end',\r\n        icon: type,\r\n        title: title,\r\n        text: text,\r\n        showConfirmButton: false,\r\n        allowOutsideClick: false,\r\n        timer: 2000\r\n    });\r\n}\r\n\r\n// HTML CLEAN\r\nfunction clearHTML() {\r\n    // select container\r\n    const containerTask = document.getElementById('content-task');\r\n    // clean html with metod while\r\n    while (containerTask.firstChild) {\r\n        containerTask.removeChild(containerTask.firstChild);\r\n    }\r\n}"]}